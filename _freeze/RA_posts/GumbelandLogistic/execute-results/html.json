{
  "hash": "cad43aea0e8352cca19dd6bfa275cc1f",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Gumbel and Logistic Distributions: Exploring Extremes\"\ntheme: jolla\ncategories: [statistics, probability, python]\n---\n\n## Introduction\n\nProbability distributions help us model real-world phenomena, from predicting extreme weather events to binary classification problems in machine learning. Two closely related but distinct distributions—the **Gumbel distribution** and the **Logistic distribution**—have interesting properties that make them useful in different scenarios.\n\n## Overview  \n\nThis post will:  \n- Explain the Gumbel and Logistic distributions  \n- Discuss their real-world applications  \n- Explore their mathematical connection  \n- Introduce generalized forms of these distributions based on recent research  \n- Visualize the distributions using Python  \n\n## The Gumbel Distribution\n\nThe **Gumbel distribution** is an **Extreme Value Distribution** that models the probability of extreme values occurring in a dataset. It is particularly useful for predicting extreme events such as floods, heatwaves, and stock market crashes.\n\n### Probability Density Function (PDF)\n\nThe Gumbel distribution is defined by the probability density function:\n\n$$\nf(x) = \\frac{1}{\\beta} e^{- \\left( \\frac{x - \\mu}{\\beta} + e^{- \\frac{x - \\mu}{\\beta}} \\right)}\n$$\n\nwhere:\n- \\( \\mu \\) (location parameter) determines where the peak of the distribution occurs.\n- \\( \\beta \\) (scale parameter) controls the spread of the distribution.\n\n### Cumulative Distribution Function (CDF)\n\nThe cumulative distribution function (CDF) of a Gumbel-distributed variable is:\n\n$$\nF(x) = e^{-e^{-(x-\\mu)/\\beta}}\n$$\n\nwhich describes the probability that \\( X \\) takes on a value less than or equal to \\( x \\).\n\n\n\n::: {#f953279f .cell execution_count=2}\n``` {.python .cell-code}\n# Define parameters\nmu, beta = 0, 1  # Gumbel distribution parameters\n\n# Generate x values\nx = np.linspace(-6, 6, 1000)\n\n# Compute PDFs and CDFs\ngumbel_pdf = gumbel_r.pdf(x, loc=mu, scale=beta)\ngumbel_cdf = gumbel_r.cdf(x, loc=mu, scale=beta)\n\n# Plot Gumbel PDF\nplt.figure(figsize=(8, 5))\nplt.plot(x, gumbel_pdf, label=\"Gumbel PDF\", linestyle=\"dashed\", color=\"blue\")\nplt.title(\"Gumbel Distribution - Probability Density Function\")\nplt.xlabel(\"x\")\nplt.ylabel(\"Density\")\nplt.legend()\nplt.grid()\nplt.show()\n\n# Plot Gumbel CDF\nplt.figure(figsize=(8, 5))\nplt.plot(x, gumbel_cdf, label=\"Gumbel CDF\", linestyle=\"dashed\", color=\"blue\")\nplt.title(\"Gumbel Distribution - Cumulative Distribution Function\")\nplt.xlabel(\"x\")\nplt.ylabel(\"Cumulative Probability\")\nplt.legend()\nplt.grid()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](GumbelandLogistic_files/figure-html/cell-3-output-1.png){width=672 height=449}\n:::\n\n::: {.cell-output .cell-output-display}\n![](GumbelandLogistic_files/figure-html/cell-3-output-2.png){width=663 height=449}\n:::\n:::\n\n\n### Understanding \\mu and \\beta in the Gumbel Distribution\n\n- \\mu shifts the distribution left or right.\n- \\beta controls how spread out or concentrated the distribution is.\n- The mode (most probable value) is exactly at \\mu.\n- The mean is given by:\n\n  $$\n  E[X] = \\mu + \\beta \\gamma\n  $$\n\n  where \\( \\gamma \\approx 0.5772 \\) is the **Euler-Mascheroni constant**.\n\nTo estimate these parameters from data:\n- \\( \\mu \\) is estimated as \\( \\bar{x} - \\beta \\gamma \\).\n- \\( \\beta \\) is estimated using the sample standard deviation:\n\n  $$\n  \\beta \\approx \\frac{s}{\\pi / \\sqrt{6}}\n  $$\n\n### Real-Life Example\n\nImagine a climate scientist predicting the **maximum annual temperature** in a city over the next 50 years. Since the interest is in **extreme temperatures**, a distribution that focuses on the right tail of the data—like the Gumbel distribution—is needed.\n\n## The Logistic Distribution\n\nThe **Logistic distribution** is similar to the normal distribution but has **heavier tails**, meaning that extreme values occur more frequently than they would in a normal distribution.\n\n### Probability Density Function (PDF)\n\nThe logistic distribution is given by:\n\n$$\nf(x) = \\frac{e^{- \\frac{x - \\mu}{s}}}{s \\left(1 + e^{- \\frac{x - \\mu}{s}}\\right)^2}\n$$\n\nwhere:\n- \\( \\mu \\) (location parameter) determines the center of the distribution.\n- \\( s \\) (scale parameter) controls the spread.\n\n### Cumulative Distribution Function (CDF)\n\nThe cumulative distribution function (CDF) is:\n\n$$\nF(x) = \\frac{1}{1 + e^{-(x - \\mu)/s}}\n$$\n\nwhich resembles the **sigmoid function** commonly used in logistic regression.\n\n::: {#2193aaec .cell layout-ncol='2' execution_count=3}\n``` {.python .cell-code}\nmu,s = 0,1  # Logistic distribution parameters\n\nlogistic_pdf = logistic.pdf(x, loc=mu, scale=s)\nlogistic_cdf = logistic.cdf(x, loc=mu, scale=s)\n\n# Plot Logistic PDF\nplt.figure(figsize=(8, 5))\nplt.plot(x, logistic_pdf, label=\"Logistic PDF\", linestyle=\"solid\", color=\"red\")\nplt.title(\"Logistic Distribution - Probability Density Function\")\nplt.xlabel(\"x\")\nplt.ylabel(\"Density\")\nplt.legend()\nplt.grid()\nplt.show()\n\n# Plot Logistic CDF\nplt.figure(figsize=(8, 5))\nplt.plot(x, logistic_cdf, label=\"Logistic CDF\", linestyle=\"solid\", color=\"red\")\nplt.title(\"Logistic Distribution - Cumulative Distribution Function\")\nplt.xlabel(\"x\")\nplt.ylabel(\"Cumulative Probability\")\nplt.legend()\nplt.grid()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](GumbelandLogistic_files/figure-html/cell-4-output-1.png){width=672 height=449}\n:::\n\n::: {.cell-output .cell-output-display}\n![](GumbelandLogistic_files/figure-html/cell-4-output-2.png){width=663 height=449}\n:::\n:::\n\n\n### Understanding \\( \\mu \\) and \\( s \\) in the Logistic Distribution\n\n- \\( \\mu \\) shifts the entire distribution left or right.\n- \\( s \\) determines how spread out the distribution is.\n- The mean and median are both equal to \\( \\mu \\).\n- The standard deviation is:\n\n  $$\n  \\sigma = \\frac{s\\pi}{\\sqrt{3}}\n  $$\n\nTo estimate these parameters from data:\n- \\( \\mu \\) is simply the **sample mean** \\( \\bar{x} \\).\n- \\( s \\) is estimated using:\n\n  $$\n  s \\approx \\frac{s_X \\sqrt{3}}{\\pi}\n  $$\n\n### Real-Life Example\n\nOne key application of the logistic distribution is in **logistic regression**, which is used in medical research to model the probability of diseases, such as heart disease, based on risk factors.\n\n## Mathematical Relationship: Difference of Two Gumbel Variables\n\n### Definition\n\nIt turns out that the **difference of two independent Gumbel-distributed variables** follows a **Logistic distribution**:\n\n\\[\nD = X_1 - X_2 \\sim \\text{Logistic}(\\mu_1 - \\mu_2, \\beta)\n\\]\n\nwhere:\n\n$$\nX_1 \\sim \\text{Gumbel}(\\mu_1, \\beta), \\quad X_2 \\sim \\text{Gumbel}(\\mu_2, \\beta)\n$$\n\n### Deep dive \n\n1. Express the two Gumbel-distributed variables:\n\n   $$\n   X_1 = \\mu_1 + \\beta Z_1, \\quad X_2 = \\mu_2 + \\beta Z_2\n   $$\n\n   where $Z_1$ and $Z_2$ are **i.i.d. standard Gumbel-distributed variables**.\n\n2. Compute the difference:\n\n   $$\n   D = X_1 - X_2\n   $$\n\n   Expanding:\n\n   $$\n   D = (\\mu_1 + \\beta Z_1) - (\\mu_2 + \\beta Z_2)\n   $$\n\n   Simplifying:\n\n   $$\n   D = (\\mu_1 - \\mu_2) + \\beta (Z_1 - Z_2)\n   $$\n\n3. Since **\\Z_1 - Z_2 follows a standard Logistic(0,1) distribution**, we conclude:\n\n   $$\n   D \\sim \\text{Logistic}(\\mu_1 - \\mu_2, \\beta)\n   $$\n\n## Python Simulation\n\nLet's verify this numerically:\n\n::: {#89b869a7 .cell execution_count=4}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import logistic\n\n# Define parameters\nmu1, mu2 = 10, 5  \nbeta = 2  \nsize = 100000  \n\n# Generate two independent Gumbel-distributed variables\nX1 = np.random.gumbel(mu1, beta, size)\nX2 = np.random.gumbel(mu2, beta, size)\n\n# Compute the difference\nD = X1 - X2\n\n# Fit a logistic distribution to the data\nloc, scale = logistic.fit(D)\n\n# Generate values for plotting\nx = np.linspace(min(D), max(D), 1000)\npdf_logistic = logistic.pdf(x, loc=loc, scale=scale)\n\n# Plot histogram and logistic fit\nplt.figure(figsize=(10, 6))\nplt.hist(D, bins=100, density=True, alpha=0.6, label=\"Empirical Difference Distribution\")\nplt.plot(x, pdf_logistic, 'r-', label=f\"Fitted Logistic Distribution\\n(μ={loc:.2f}, β={scale:.2f})\")\nplt.xlabel(\"Difference (X1 - X2)\")\nplt.ylabel(\"Density\")\nplt.title(\"Difference of Two Independent Gumbel-Distributed Variables\")\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](GumbelandLogistic_files/figure-html/cell-5-output-1.png){width=821 height=523}\n:::\n:::\n\n\n- The **Gumbel distribution** is used to model **extreme events** (e.g., highest temperature in a year).\n- If we have **two such extreme events from different locations or sources**, their **difference** behaves like a **logistic distribution**.\n\nImagine two cities, City A and City B, where we record the hottest temperature each year. If we **subtract** the maximum temperatures of City A from City B, the result is a logistic distribution.\n\n## Generalized Forms of Gumbel and Logistic Distributions\n\nRecent research by **Aljarrah, Famoye, and Lee (2020)** introduced a **Generalized Logistic Distribution** that combines properties of both logistic and Gumbel distributions.\n[Read the full paper here](https://jsdajournal.springeropen.com/articles/10.1186/s40488-020-00107-8)\n\n### Why is this Important?\n\n1. The generalized logistic distribution can model **both symmetric and skewed data**.\n2. It provides better fits for real-world skewed datasets compared to standard logistic or Gumbel distributions.\n3. The research extends this into a **Generalized Logistic Regression Model**, which includes:\n   - **Logistic-log-logistic regression**\n   - **Weibull-extreme value regression**\n   - **Log-Fréchet regression**\n\n",
    "supporting": [
      "GumbelandLogistic_files"
    ],
    "filters": [],
    "includes": {}
  }
}