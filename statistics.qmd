---
title: "Statistics for DS Interview (Entry Level)"
---
# Descriptive Statistics

## **Introduction**
Descriptive statistics summarize and analyze data to provide meaningful insights. They include measures of central tendency, dispersion, and shape of distributions. Mastering these concepts is essential for any data science interview.

---

## **1. Measures of Central Tendency**
These describe where the center of a dataset lies.

### **Mean ($\mu$) - The Arithmetic Average**
The mean is calculated as:
\[
\mu = \frac{\sum X_i}{n}
\]
where:
- $X_i$ are individual data points  
- $n$ is the total number of data points

#### **Example with Normally Distributed Data:**
```{python}
import numpy as np
import matplotlib.pyplot as plt

# Generate normally distributed data
np.random.seed(42)
data = np.random.normal(loc=50, scale=10, size=1000)
mean_value = np.mean(data)

# Plot histogram
plt.hist(data, bins=30, edgecolor='black', color='blue', alpha=0.7, density=True)
plt.axvline(mean_value, color='red', linestyle='dashed', label=f'Mean: {mean_value:.2f}')
plt.xlabel("Value")
plt.ylabel("Density")
plt.title("Normal Distribution with Mean")
plt.legend()
plt.show()
```

### **Median - The Middle Value**
The median is:
- The middle value for odd-sized datasets
- The average of the two middle values for even-sized datasets

#### **Example with Right-Skewed Data:**
```{python}
# Generate right-skewed data
skewed_data = np.random.exponential(scale=10, size=1000)
median_value = np.median(skewed_data)

# Plot histogram
plt.hist(skewed_data, bins=30, edgecolor='black', color='blue', alpha=0.7, density=True)
plt.axvline(median_value, color='red', linestyle='dashed', label=f'Median: {median_value:.2f}')
plt.xlabel("Value")
plt.ylabel("Density")
plt.title("Right-Skewed Distribution with Median")
plt.legend()
plt.show()
```

### **Mode ($Mo$) - Most Frequent Value**
Mode represents the most occurring value in the dataset.

#### **Example with Bimodal Data:**
```{python}
import numpy as np
import matplotlib.pyplot as plt

# Generate bimodal data
np.random.seed(42)
bimodal_data = np.concatenate([np.random.normal(40, 5, 500), np.random.normal(60, 5, 500)])

# Compute histogram manually
num_bins = 30
hist_values, bin_edges = np.histogram(bimodal_data, bins=num_bins)

# Find the two highest peaks manually
sorted_indices = np.argsort(hist_values)[-2:]  # Get indices of the two highest bins
mode_values = [(bin_edges[i] + bin_edges[i+1]) / 2 for i in sorted_indices]  # Midpoint of bins

# Plot histogram
plt.hist(bimodal_data, bins=num_bins, edgecolor='black', color='blue', alpha=0.7, density=True)

# Plot mode peaks
for mode_val in mode_values:
    plt.axvline(mode_val, color='red', linestyle='dashed', label=f'Mode: {mode_val:.2f}')

plt.xlabel("Value")
plt.ylabel("Density")
plt.title("Bimodal Distribution with Correct Mode Detection (Pure Python)")
plt.legend()
plt.show()
```
---


## **2. Measures of Dispersion**
These measure how spread out the data is.

### **Variance ($\sigma^2$) - The Spread of Data**
\[
\sigma^2 = \frac{\sum (X_i - \mu)^2}{n}
\]

### **Standard Deviation ($\sigma$)**
The standard deviation is simply the square root of variance:
\[
\sigma = \sqrt{\sigma^2}
\]

#### **Example with Normal Distribution:**
```{python}
std_dev = np.std(data)

# Plot histogram
plt.hist(data, bins=30, edgecolor='black', color='blue', alpha=0.7, density=True)
plt.axvline(mean_value, color='red', linestyle='dashed', label=f'Mean: {mean_value:.2f}')
plt.axvline(mean_value + std_dev, color='green', linestyle='dashed', label=f'+1 Std Dev')
plt.axvline(mean_value - std_dev, color='green', linestyle='dashed')
plt.xlabel("Value")
plt.ylabel("Density")
plt.title("Normal Distribution with Standard Deviation")
plt.legend()
plt.show()
```

---

## **3. Skewness and Kurtosis**
### **Skewness - Asymmetry of Data**
- **Right-skewed (Positive skew):** Mean > Median > Mode
- **Left-skewed (Negative skew):** Mode > Median > Mean
- **Symmetric:** Mean = Median = Mode

#### **Example with Skewed Data:**
```{python}
skewness = np.mean((skewed_data - mean_value)**3) / std_dev**3

# Plot histogram
plt.hist(skewed_data, bins=30, edgecolor='black', color='blue', alpha=0.7, density=True)
plt.xlabel("Value")
plt.ylabel("Density")
plt.title(f"Right-Skewed Distribution (Skewness: {skewness:.2f})")
plt.show()
```

### **Kurtosis - The "Peakedness" of a Distribution**
- **Leptokurtic:** More extreme outliers (fat tails)
- **Mesokurtic:** Normal distribution
- **Platykurtic:** Fewer outliers (thin tails)

#### **Example with Kurtosis:**
```{python}
kurtosis = np.mean((data - mean_value)**4) / std_dev**4

# Plot histogram
plt.hist(data, bins=30, edgecolor='black', color='blue', alpha=0.7, density=True)
plt.xlabel("Value")
plt.ylabel("Density")
plt.title(f"Normal Distribution (Kurtosis: {kurtosis:.2f})")
plt.show()
```

---

## **4. Things to Keep in Mind During Interviews**
1. **Mean vs. Median:** When dealing with skewed data, median is a better measure of central tendency.
2. **Effect of Outliers:** Outliers drastically affect the mean but not the median.
3. **Interquartile Range (IQR):** Helps detect outliers (values beyond $1.5 \times IQR$ are potential outliers).
4. **Choosing Variance vs. Standard Deviation:** Standard deviation is preferred as it has the same units as the data.

---